<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.redhat.gpte.training</groupId>
    <artifactId>fis-camel-webservice</artifactId>
    <version>1.0</version>

    <packaging>bundle</packaging>
    
    <name>RedHat GPE Training :: FIS 2.0 :: Lab 3 :: Camel CXF Webservice</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- configure the versions you want to use here -->
        <fuse.version>6.2.1.redhat-169</fuse.version>
<!-- configure the versions you want to use here -->
    <fabric8.version>2.2.170.redhat-000010</fabric8.version>
    <karaf.plugin.version>4.0.8.redhat-000026</karaf.plugin.version>

    <!-- maven plugin versions -->
    <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    <maven-bundle-plugin.version>2.3.7</maven-bundle-plugin.version>
    <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <fabric8.maven.plugin.version>3.1.80.redhat-000010</fabric8.maven.plugin.version>

  </properties>

<dependencyManagement>
    <dependencies>
            <!-- import Fabric8 platform BOM first -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-project-bom-fuse-karaf</artifactId>
            <version>${fabric8.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.fuse.bom</groupId>
            <artifactId>jboss-fuse-parent</artifactId>
            <version>${fuse.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

     </dependencies>
</dependencyManagement>

    <dependencies>

        <!-- Karaf microcontainer dependencies -->
        <dependency>
          <!-- scope is compile so all features (there is only one) are installed into startup.properties,
          and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
          <groupId>org.jboss.fuse</groupId>
          <artifactId>fuse-karaf-framework</artifactId>
          <type>kar</type>
          <!-- no need to download kar dependencies -->
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>io.fabric8</groupId>
          <artifactId>fabric8-karaf-features</artifactId>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
        <dependency>
           <groupId>io.fabric8.kubernetes</groupId>
           <artifactId>kubernetes-karaf</artifactId>
           <classifier>features</classifier>
           <type>xml</type>
        </dependency>
        <dependency>
           <groupId>io.fabric8</groupId>
           <artifactId>fabric8-karaf-features</artifactId>
           <type>xml</type>
           <classifier>features</classifier>
        </dependency>

        <!-- cxf -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-soap</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-soap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jaxb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>


    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <!-- enable maven command 'mvn camel:run' -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <configuration>
                    <fileApplicationContextUri>src/main/resources/META-INF/spring/spring-camel-context.xml
                    </fileApplicationContextUri>
                </configuration>
            </plugin>


            <!-- to generate the MANIFEST-FILE required by the bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Import-Package>
                            META-INF.cxf,
                            org.xmlsoap.schemas.soap.envelope,
                            org.slf4j,
                            *
                        </Import-Package>
                        <DynamicImport-Package>
                            org.apache.cxf.*,
                            org.springframework.beans.*
                        </DynamicImport-Package>
                        <Private-Package>
                            com.redhat.gpe.training.camel
                        </Private-Package>
                        <Export-Package>
                com.redhat.gpe.training
                        </Export-Package>
                        <_failok>true</_failok>
                    </instructions>
                </configuration>
            </plugin>

            <!-- CXF wsdl2java generator, will plugin to the compile goal -->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/wsdl/CustomerService.wsdl</wsdl>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- attach feature file to install for karaf assembly -->
            <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
              <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${project.build.outputDirectory}/features.xml</file>
                      <classifier>features</classifier>
                      <type>xml</type>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
            </plugin>

            <!-- plugin goals have to be executed in order -->
            <!-- 1. install the bundle and features file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>install-artifacts</id>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 2. create karaf assembly -->
            <!-- karaf-maven-plugin creates custom microservice distribution -->
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <version>${karaf.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>karaf-assembly</id>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                    <execution>
                        <id>karaf-archive</id>
                        <goals>
                            <goal>archive</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- we are using karaf 2.4.x -->
                    <karafVersion>v24</karafVersion>
                    <useReferenceUrls>true</useReferenceUrls>
                    <!-- do not include build output directory -->
                    <includeBuildOutputDirectory>false</includeBuildOutputDirectory>
                    <startupRepositories>
                        <repo>mvn:${project.groupId}/${project.artifactId}/${project.version}/xml/features</repo>
                    </startupRepositories>
                    <!-- no startupFeatures -->
                    <startupFeatures>
                        <feature>karaf-framework</feature>
                        <feature>jaas</feature>
                        <feature>shell</feature>
                        <feature>aries-blueprint</feature>
                        <feature>http</feature>
                        <feature>cxf-core</feature>
                        <feature>cxf-jaxrs</feature>
                        <feature>cxf-http-jetty</feature>
                        <feature>camel-cxf</feature>
                        <feature>camel-http</feature>
                        <feature>fabric8-karaf-checks</feature>
                        
                        <!-- swagger -->
                        
                        <feature>cxf-specs</feature>
                        <feature>swagger2</feature>
                    </startupFeatures>
                    <startupBundles>
                        <bundle>mvn:${project.groupId}/${project.artifactId}/${project.version}</bundle>
                    </startupBundles>
                </configuration>
            </plugin>

            <!-- 3. create docker image -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>resource</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generator>
                        <config>
                            <karaf>
                                <webPort>8080</webPort>
                            </karaf>
                        </config>
                    </generator>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
